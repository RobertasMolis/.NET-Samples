// <auto-generated />
using System;
using EfCoreShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EfCoreShop.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211216171058_Shop")]
    partial class Shop
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EfCoreShop.Models.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Minima"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Media"
                        });
                });

            modelBuilder.Entity("EfCoreShop.Models.Shopitem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.ToTable("Shopitems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpiryDate = new DateTime(2021, 12, 16, 17, 10, 58, 537, DateTimeKind.Utc).AddTicks(1605),
                            Name = "Kola"
                        },
                        new
                        {
                            Id = 2,
                            ExpiryDate = new DateTime(2021, 12, 16, 17, 10, 58, 537, DateTimeKind.Utc).AddTicks(2007),
                            Name = "Bulka"
                        },
                        new
                        {
                            Id = 3,
                            ExpiryDate = new DateTime(2021, 12, 16, 17, 10, 58, 537, DateTimeKind.Utc).AddTicks(2009),
                            Name = "Sviestas"
                        },
                        new
                        {
                            Id = 4,
                            ExpiryDate = new DateTime(2021, 12, 16, 17, 10, 58, 537, DateTimeKind.Utc).AddTicks(2011),
                            Name = "Grietinė"
                        });
                });

            modelBuilder.Entity("EfCoreShop.Models.Shopitem", b =>
                {
                    b.HasOne("EfCoreShop.Models.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId");

                    b.Navigation("Shop");
                });
#pragma warning restore 612, 618
        }
    }
}
